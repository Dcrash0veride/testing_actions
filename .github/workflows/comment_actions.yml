name: service-principal
on:
  issue_comment:
    types:
      - created
jobs:
  echo-content:
    runs-on: ubuntu-latest
    if: ${{ github.event.comment.body == 'Approved' && github.event.comment.user.login == 'Dcrash0veride'}}
    steps:
    - name: echo-body
      env: 
        BODY: ${{ github.event.issue.body }}
      run: |
        echo "sub_id=$(echo $BODY | cut -d ',' -f1)" >> $GITHUB_OUTPUT
      id: vars
    - name: echo-sub-id
      id: step-two
      run: echo ${{ steps.vars.outputs.sub_id }}
    - name: set-resource-group
      env:
        BODY: ${{ github.event.issue.body }}
      id: resourcegroup
      run: echo "resource_group=$(echo $BODY | cut -d ',' -f2)" >> $GITHUB_OUTPUT
    - name: get-resource-group
      id: get-rg
      run: echo ${{ steps.resourcegroup.outputs.resource_group }}
    - name: set-resource
      env:
        BODY: ${{ github.event.issue.body }}
      id: set_resource
      run: echo "resource=$(echo $BODY | cut -d ',' -f3)" >> $GITHUB_OUTPUT
    - name: get-resource
      id: get-resource
      run: echo ${{ steps.set_resource.outputs.resource }}
    - name: set-role
      id: set-role
      env:
        BODY: ${{ github.event.issue.body }}
      run: echo "role=$(echo $BODY | cut -d ',' -f4)" >> $GITHUB_OUTPUT
    - name: get-role
      id: get-role
      run: | 
        echo ${{ steps.vars.outputs.sub_id }}
        echo ${{ steps.set_resource.outputs.resource }}
        echo ${{ steps.resourcegroup.outputs.resource_group }}
        echo ${{ steps.set-role.outputs.role }}
    - name: az-create-sp
      run: |
        set -a
        az login --service-principal \
        -u ${{ secrets.ARM_CLIENT_ID }} \
        -p ${{ secrets.ARM_CLIENT_SECRET }} \
        --tenant ${{ secrets.ARM_TENANT_ID }}
        az ad sp create-for-rbac --name sp-${RANDOM}${RANDOM} \
        --role ${{ steps.set-role.outputs.role}} \
        --scopes /subscriptions/${{ steps.vars.outputs.sub_id }}
